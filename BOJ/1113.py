import sys 
from collections import deque 

dx = [0,-1,0,1]
dy = [-1,0,1,0] 

def bfs(x,y,h):
    visit = [(x,y)] 
    q = deque([(x,y)])
    origin_h = h 
    mini = 10 
    ret = 0 
    fail = [(x,y)] 
    while q:
        x,y = q.popleft() 
        for px,py in zip(dx,dy):
            nx,ny = x+px,y+py 
            if 0<=nx<n and 0<=ny<m :
                if pool[nx][ny] <= origin_h and not (nx,ny) in visit :
                    visit.append((nx,ny))
                    q.append((nx,ny))
                    if pool[nx][ny] == origin_h:
                        fail.append((nx,ny))
                elif pool[nx][ny] > origin_h : 
                    mini = min(mini,pool[nx][ny])
            else: 
                for f in fail:
                    FAIL[f[0]][f[1]] = True
                return 0
    for vi in visit:
        x,y = vi
        check[x][y] = False 
        ret += mini - pool[x][y]
        pool[x][y] = mini
    return ret 

n,m = map(int,sys.stdin.readline().split())
check = [[True for _ in range(m)] for _ in range(n)] 
pool = [list(map(int,list(sys.stdin.readline()[:-1]))) for _ in range(n)]
answer = 0 
FAIL= [[False for _ in range(m)] for _ in range(n)]
for i in range(1,n-1):
    for j in range(1,m-1):
        if check[i][j] and pool[i][j] != 9 and not FAIL[i][j] : 
            answer += bfs(i,j,pool[i][j])
print(answer)

"""
5 5
55515
53121
54445
51115
55555

5 5
59995
95549
94449
95449
88888


5 9
111111111
115111611
131516161
115111611
111111111

3 5
16661
61216
16661

5 5
16666
63636
66146
13236
66666


1 1
1

48 40
1666116661166611666116661166611666116661
6111661116611166111661116611166111661116
1666116661166611666116661166611666116661
1666116661166611666116661166611666116661
6111661116611166111661116611166111661116
1666116661166611666116661166611666116661
1666116661166611666116661166611666116661
6111661116611166111661116611166111661116
1666116661166611666116661166611666116661
1666116661166611666116661166611666116661
6111661116611166111661116611166111661116
1666116661166611666116661166611666116661
1666116661166611666116661166611666116661
6111661116611166111661116611166111661116
1666116661166611666116661166611666116661
1666116661166611666116661166611666116661
6111661116611166111661116611166111661116
1666116661166611666116661166611666116661
1666116661166611666116661166611666116661
6111661116611166111661116611166111661116
1666116661166611666116661166611666116661
1666116661166611666116661166611666116661
6111661116611166111661116611166111661116
1666116661166611666116661166611666116661
1666116661166611666116661166611666116661
6111661116611166111661116611166111661116
1666116661166611666116661166611666116661
1666116661166611666116661166611666116661
6111661116611166111661116611166111661116
1666116661166611666116661166611666116661
1666116661166611666116661166611666116661
6111661116611166111661116611166111661116
1666116661166611666116661166611666116661
1666116661166611666116661166611666116661
6111661116611166111661116611166111661116
1666116661166611666116661166611666116661
1666116661166611666116661166611666116661
6111661116611166111661116611166111661116
1666116661166611666116661166611666116661
1666116661166611666116661166611666116661
6111661116611166111661116611166111661116
1666116661166611666116661166611666116661
1666116661166611666116661166611666116661
6111661116611166111661116611166111661116
1666116661166611666116661166611666116661
1666116661166611666116661166611666116661
6111661116611166111661116611166111661116
1666116661166611666116661166611666116661
5 5
55515
53121
54445
51115
55555

출처: https://txegg.tistory.com/117 [MuviSsum]
출처: https://txegg.tistory.com/117 [MuviSsum]
"""
